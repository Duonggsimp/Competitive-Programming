
//problem 22: http://csloj.ddns.net/problem/22


#include <bits/stdc++.h>
using namespace std;
int n, m, a[1000][1000], dem;
bool kt;
int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    ;
    cout.tie(0);
    cin >> n >> m;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++) cin >> a[i][j];
    kt = false;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= m; j++) {
            kt = false;
            for (int z = 0; z <= i - 1; z++)
                if (a[i][j] < a[z][j])
                    break;
                else if (z == i - 1 && a[i][j] >= a[z][j]) {
                    dem++;
                    kt = true;
                }
            if (kt == false)
                for (int z = i + 1; z <= n + 1; z++)
                    if (a[i][j] < a[z][j])
                        break;
                    else if (z == n + 1 && a[i][j] >= a[z][j]) {
                        dem++;
                        kt = true;
                    }
            if (kt == false)
                for (int z = 0; z <= j - 1; z++)
                    if (a[i][j] < a[i][z])
                        break;
                    else if (z == j - 1 && a[i][j] >= a[i][z]) {
                        dem++;
                        kt = true;
                    }
            if (kt == false)
                for (int z = j + 1; z <= m + 1; z++)
                    if (a[i][j] < a[i][z])
                        break;
                    else if (z == m + 1 && a[i][j] >= a[i][z]) {
                        dem++;
                        kt = true;
                    }
        }
    cout << dem;
}

//------------------------------------------------------------------------------//

// problem 1740: http://chuyentin.ddns.net/problem.php?id=1740


#include <bits/stdc++.h>
using namespace std;
int x,y;
bool cmp(int a, int b){
    return a > b;
}

void solve(){
    int n,m,ans=0;
    cin >> n >> m;
    int a[n],b[m];
    for (int i=0;i<n;i++) cin >> a[i];
    for (int i=0;i<m;i++) cin >> b[i];
    sort(b,b+m);
    int k;
    cin >> k;
    while(k--){
        cin >> x >> y;
        ans=0;
        for (int i =0;i<n;i++){
            int t1=x/a[i];
            int t2=y/a[i];
            int l = lower_bound(b,b+m,t1) - b;
            int r = lower_bound(b,b+m,t2) - b;
            if(r == m) r--;
            if(a[i] * b[l] < x) l++;
            if(a[i] * b[r] > y) r--;
            //cout << l << " " << r << " " << a[i] * b[l-1] << " " << a[i] * b[r+1] <<'\n';
            if(a[i] * b[l] >= x && a[i] * b[r] <= y) {
            ans+=(r-l)+1;
            if (l>0) if (a[i] * b[l-1] >= x) ans++;
            if (a[i] * b[r+1] <= y && r+1 != m) ans++;    
            }
        }
        cout << ans << "\n";
    }

}




int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin >> t;
    while(t--) solve();
    return 0;
}

//------------------------------------------------------------------------------//

//problem 3: https://dochub.com/duonggphung2212/xP5LzojKa8eyY23R7ZDlO3/bai-tap-10-docx

#include <bits/stdc++.h>

using namespace std;
long a[100][100];
long n,m,dem,ma;
int main(){
    cin>>n>>m;
    pair<long,long>mp[n];
    for (long i=1;i<=n;i++)
        for (long j=1;j<=m;j++)
    {
        cin>>a[i][j];
    }
    for (long i=1;i<=n;i++){
        for (long j=1;j<=m;j++)
            ma=max(ma,a[i][j]);
    mp[dem]=make_pair(ma,i);
    dem++;
    ma=0; }
    sort(mp,mp+dem);
    reverse(mp,mp+dem);
    for (auto it:mp){
        for (long j=1;j<=m;j++)
            cout<<a[it.second][j]<<' ';
        cout<<endl;}
    return 0;
}

//------------------------------------------------------------------------------//
